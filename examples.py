import numpy as np
import networkx as nx
import hierarchy_coordinates as hc

seed = 42
n = 20

""" Nearly all graphs generated by network x are undirected (and often unweighted),
and thus centered upon (0, 0, 0) hierarchy coordinates. """
# Adjacency_Matrix = np.random.rand(n, n)
# Adjacency_Matrix = nx.random_regular_graph(d=1, n=n)

A_0 = np.array([
    [0, 1, 0, 0],
    [0, 0, 1, 0],
    [0, 0, 0, 1],
    [0, 0, 0, 0]
])

A_1 = np.array([
    [0, 1, 0, 0],
    [0, 0, 1, 0],
    [0, 0, 0, 1],
    [0.5, 0, 0, 0]
])

A_2 = np.array([
    [0, 1, 0, 0],
    [0, 0, 1, 1],
    [0, 0, 0, 0],
    [0, 0, 0, 0]
])

A_3 = np.array([
    [0, 1, 1, 0, 0, 0],
    [0, 0, 0, 1, 1, 0],
    [0, 0, 0, 0, 1, 1],
    [0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0],
])

List_of_Adjacency_Matrices = [A_0, A_1, A_2, A_3]
index = 0
for A in List_of_Adjacency_Matrices:
    orderability, feedforwardness, treeness = np.round(hc.average_hierarchy_coordinates(A), 6)
    print(f'A_{index} | ', 'O:', {orderability}, 'F:', {feedforwardness}, 'T:', {treeness})
    index += 1
